#!/bin/bash

# External requirements:
#
#    * Git
#    * sed
#    * Ruby with ERB and YAML support
#    * Puppet >= 2.7
#    * puppet-lint
#    * r10k
#
#    Adjust LINTFLAGS as appropriate

# Redirect output to stderr.
exec 1>&2

PUPPETLINT_FLAGS=${PUPPETLINT_FLAGS:-'--no-autoloader_layout-check --no-80chars-check'}
TMPDIR=${TMPDIR:-'/tmp'}
TMPFILE=$(mktemp "${TMPDIR}"/tmp.XXXXXXXXXX)
TMPR10K=$(mktemp -d "${TMPDIR}"/tmp.XXXXXXXXXX)
STATUS=0

# Register exit trap for removing temporary files
trap 'rm -rf $TMPFILE $TMPR10K' EXIT INT HUP

# Check for ruby binary
which ruby >/dev/null 2>&1 || exit 1

# Check for Puppet binary
which puppet >/dev/null 2>&1 || exit 1

# Check for puppet-lint
which puppet-lint >/dev/null 2>&1 || exit 1

# Check for erb
which erb >/dev/null 2>&1 || exit 1

# Get correct git revision
if git rev-parse --quiet --verify HEAD > /dev/null
then
    revision=HEAD
else
    # Initial commit: diff against an empty tree object
    revision=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

IFS="
 "

# Get a list of files changed in this transaction
declare -a FILES
FILES=$(git diff --cached --name-only --diff-filter=ACM "${revision}")


for file in ${FILES[@]}
do
    # Don't check empty files
    if [[ $(git cat-file -s ":0:${file}") -eq 0 ]]; then
        continue
    fi

    extension="${file##*.}"
    git cat-file blob ":0:${file}" > $TMPFILE

    if [[ $? -ne 0 ]]; then
        echo "Unable to checkout ${file}"
        STATUS=2
    else
        case $extension in
            pp)
                # Remove import lines while parsing
                # http://projects.puppetlabs.com/issues/9670#note-14
                sed -i -e '/^import / d' $TMPFILE >/dev/null 2>&1
                # Puppet syntax check
                echo "Checking puppet syntax: ${file}"
                puppet parser validate $TMPFILE >/dev/null 2>&1
                if [[ $? -ne 0 ]]; then
                    echo "Puppet syntax error in ${file}. Run 'puppet parser validate ${file}'" >&2
                    STATUS=2
                fi

                # puppet-lint check
                echo "Checking puppet lint: ${file}"
                puppet-lint $PUPPETLINT_FLAGS --log-format "${file}:%{linenumber} %{KIND} - %{message}" $TMPFILE 2> /dev/null
                if [[ $? -ne 0 ]] ; then
                    STATUS=2
                fi
            ;;

            erb)
                # syntax check templates - this doesn't catch a lot of mistakes,
                # but it should catch gross mistakes
                echo "Checking ERB syntax: ${file}"
                erb -x -T - "${TMPFILE}" | ruby -c >/dev/null 2>&1
                if [[ $? -ne 0 ]]; then
                    echo "ERB syntax error in ${file}" >&2
                    STATUS=2
                fi
            ;;
            yml|yaml)
                # syntax YAML files, https://ttboj.wordpress.com/2013/08/25/finding-yaml-errors-in-puppet/
                echo "Parsing YAML file: ${file}"
                ruby -ryaml -e "YAML.parse(File.open('${TMPFILE}'))" >/dev/null 2>&1
                if [[ $? -ne 0 ]]; then
                    echo "YAML syntax error in ${file}" >&2
                    STATUS=2
                fi
            ;;
            json)
                # syntax YAML files, https://ttboj.wordpress.com/2013/08/25/finding-yaml-errors-in-puppet/
                echo "Checking JSON syntax: ${file}"
                ruby -rjson -e "JSON.parse(File.open('${TMPFILE}').read)" >/dev/null 2>&1
                if [[ $? -ne 0 ]]; then
                    echo "JSON syntax error in ${file}" >&2
                    STATUS=2
                fi
            ;;
        esac

        # r10k Puppetfile syntax
        echo "Checking Puppetfile syntax for r10k: ${file}"
        which r10k >/dev/null 2>&1
        if [[ $? -eq 0 ]]; then
            if [[ "$(basename $file)" == 'Puppetfile' ]]; then
                cp "${TMPFILE}" "${TMPR10K}/Puppetfile"
                ( cd "${TMPR10K}" && r10k puppetfile check ) 2> "${TMPFILE}"
                if [[ $? -ne 0 ]]; then
                    echo "r10k syntax error in ${file}" >&2
                    sed "s,${TMPR10K}/Puppetfile,${file}," >&2 < "${TMPFILE}"
                    STATUS=2
                fi
            fi
        fi
    fi
done

exit $STATUS
